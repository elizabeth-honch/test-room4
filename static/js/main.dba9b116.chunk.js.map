{"version":3,"sources":["store.js","components/MainNavigation/MainNavigation.jsx","api/base.js","api/getTracks.js","components/MainPage/MainPage.jsx","components/TrackPage/TrackList/TrackList.jsx","api/searchTrack.js","components/TrackPage/TrackPage.jsx","api/getArtist.js","components/ArtistPage/ArtistPage.jsx","App.jsx","index.jsx"],"names":["initial","initialState","tracks","artist","newTrack","store","createStore","state","action","type","payload","MainNavigation","className","to","BASE_URL","API_KEY","json","getTracks","fetch","then","res","data","track","catch","error","MainPage","useSelector","dispatch","useDispatch","useEffect","map","name","undefined","href","url","playcount","TrackList","searchTrack","results","trackmatches","TrackPage","useState","nameTrack","setNameTrack","value","onChange","target","placeholder","onClick","length","getArtist","ArtistPage","props","location","pathname","split","push","info","bio","summary","tags","tag","mbid","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dba9b116.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { createStore } from 'redux';\n\nconst initial = [];\n\nconst initialState = {\n  tracks: initial,\n  artist: initial,\n  newTrack: initial,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SHOW_TRACK':\n      return {\n        ...state,\n        tracks: action.payload.tracks,\n      };\n\n    case 'SHOW_INFO':\n      return {\n        ...state,\n        artist: action.payload.artist,\n      };\n\n    case 'NEW_TRACK':\n      return {\n        ...state,\n        newTrack: action.payload.newTrack,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, initialState);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './MainNavigation.scss';\n\nexport const MainNavigation = () => (\n  <div>\n    <nav className=\"navbar ui three item menu\">\n      <Link className=\"navbar__item item\" to=\"/\">\n        Главная\n      </Link>\n      <Link className=\"navbar__item item\" to=\"/track\">\n        Страница поиска трека\n      </Link>\n      <Link className=\"navbar__item item\" to=\"/artist/:name\">\n        Страница об исполнителе\n      </Link>\n    </nav>\n  </div>\n);\n","export const BASE_URL = 'http://ws.audioscrobbler.com/';\nexport const API_KEY = 'c74f5908f8495ada750ffabb4532770c';\nexport const json = '&format=json';\n","import { BASE_URL, API_KEY, json } from './base';\n\n// async function getTrack() {\n//   const res = await fetch(`\n//   ${BASE_URL}2.0/?method=chart.gettoptracks&api_key=${API_KEY}${json}`);\n//   const data = await res.json();\n\n//   return data.tracks.track;\n// }\n// /2.0/?method=artist.getinfo&artist=Cher&api_key=YOUR_API_KEY&format=json\nconst getTracks = () => fetch(`\n${BASE_URL}2.0/?method=chart.gettoptracks&api_key=${API_KEY}${json}`)\n  .then(res => res.json())\n  .then(data => data.tracks.track)\n  .catch(error => error);\n\nexport default getTracks;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport getTracks from '../../api/getTracks';\n\nimport './MainPage.scss';\n\nexport const MainPage = () => {\n  const tracks = useSelector(state => state.tracks);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getTracks()\n      .then((data) => {\n        dispatch({\n          type: 'SHOW_TRACK',\n          payload: { tracks: data },\n        });\n      });\n  }, []);\n\n  return (\n    <div className=\"ui link cards\">\n      {\n        tracks.map(track => (\n          <div key={track.playcount} className=\"card\">\n            <div className=\"content\">\n              <div className=\"header\">{track.name}</div>\n              <div className=\"meta artist\">\n                {\n                  (track.artist.name !== undefined) && (\n                    <Link to={`artist/:${track.artist.name}`}>\n                      {track.artist.name}\n                    </Link>\n                  )\n                }\n                <a\n                  href={track.artist.url}\n                  className=\"artist__link\"\n                >\n                  {`${track.artist.name} на сервисе Last.fm`}\n                </a>\n              </div>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TrackList.scss';\n\nexport const TrackList = ({ tracks }) => (\n  <ul className=\"list\">\n    {\n      tracks.map(track => (\n        <li className=\"list__item\" key={track.url}>\n          <h4>{`Track name - ${track.name}`}</h4>\n          <p>{`Artist - ${track.artist}`}</p>\n        </li>\n      ))\n    }\n  </ul>\n);\n\nTrackList.propTypes = {\n  tracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      artist: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import { BASE_URL, API_KEY, json } from './base';\n\nconst searchTrack = name => fetch(`\n${BASE_URL}/2.0/?method=track.search&track=${name}&api_key=${API_KEY}${json}`)\n  .then(res => res.json())\n  .then(data => data.results.trackmatches.track)\n  .catch(error => error);\n\nexport default searchTrack;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { TrackList } from './TrackList/TrackList';\nimport searchTrack from '../../api/searchTrack';\nimport './TrackPage.scss';\n\nexport const TrackPage = () => {\n  const [nameTrack, setNameTrack] = useState('');\n  const newTrack = useSelector(state => state.newTrack);\n  const dispatch = useDispatch();\n\n  const createList = ({ target }) => {\n    setNameTrack(target.value);\n  };\n\n  const addTrack = () => {\n    searchTrack(nameTrack)\n      .then((data) => {\n        dispatch({\n          type: 'NEW_TRACK',\n          payload: { newTrack: data },\n        });\n      });\n  };\n\n  return (\n    <div className=\"track\">\n      <div className=\"ui icon input\">\n        <i className=\"search icon\" />\n        <input\n          type=\"text\"\n          value={nameTrack}\n          onChange={createList}\n          placeholder=\"Название трека\"\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"ui primary button\"\n        onClick={addTrack}\n      >\n        Найти\n      </button>\n      {\n        (newTrack.length > 0) && <TrackList tracks={newTrack} />\n      }\n    </div>\n  );\n};\n","import { BASE_URL, API_KEY, json } from './base';\n\nconst getArtist = name => fetch(`\n${BASE_URL}2.0/?method=artist.getinfo&artist=${name}&api_key=${API_KEY}${json}`)\n  .then(res => res.json())\n  .then(data => data.artist)\n  .catch(error => error);\n\nexport default getArtist;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './ArtistPage.scss';\n\nimport getArtist from '../../api/getArtist';\n\nexport const ArtistPage = (props) => {\n  const name = props.location.pathname.split(':')[1];\n  const artist = useSelector(state => state.artist);\n\n  if (name !== 'Name') {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      getArtist(name)\n        .then((data) => {\n          artist.push(data);\n          dispatch({\n            type: 'SHOW_ARTIST',\n            payload: { artist: data },\n          });\n        });\n    }, [artist]);\n  }\n\n  return (\n    <div>\n      {\n        artist.map(info => (\n          <div className=\"information\" key={info.mbid}>\n            <h4 className=\"information__name\">{info.name}</h4>\n            <p>{info.bio.summary}</p>\n            <ul className=\"information__tags\">\n              {\n                info.tags.tag.map(tag => (\n                  <li key={tag.name} className=\"information__item\">\n                    <p className=\"information__tag-name\">\n                      {`Tag - ${tag.name}`}\n                    </p>\n                    <a href={tag.url} className=\"information__tag-url\">\n                      {tag.url}\n                    </a>\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n\nArtistPage.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  props: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { MainNavigation } from './components/MainNavigation/MainNavigation';\nimport { MainPage } from './components/MainPage/MainPage';\nimport { TrackPage } from './components/TrackPage/TrackPage';\nimport { ArtistPage } from './components/ArtistPage/ArtistPage';\nimport './App.scss';\n\nexport const App = () => (\n  <div className=\"App\">\n    <MainNavigation />\n    <section>\n      <Switch>\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/track\" component={TrackPage} />\n        <Route path=\"/artist\" component={ArtistPage} />\n      </Switch>\n    </section>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}